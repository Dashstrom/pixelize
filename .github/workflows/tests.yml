name: tests

on:
  - push

jobs:
  tests:
    name: Tests on ${{ matrix.os }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-12
            python-version: "3.8"
          - os: windows-2022
            python-version: "3.8"
          - os: ubuntu-20.04
            python-version: "3.8"
          - os: ubuntu-20.04
            python-version: "3.12"
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --all-extras --no-interaction --no-root
      - name: Install project
        run: poetry install --all-extras --no-interaction
      - name: Run tests
        run: |
          source $VENV
          poe test
